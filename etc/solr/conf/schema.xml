<?xml version="1.0" ?>
<schema name="Koha Bibliographic Index" version="1.1">
  <types>
    <fieldtype name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
    <fieldtype name="integer" class="solr.IntField" omitNorms="true"/>
    <!--<fieldtype name="sint" class="solr.SortableIntField" sortMissingLast="true" omitNorms="true"/>-->
    <fieldtype name="date" class="solr.DateField" sortMissingLast="true" omitNorms="true"/>

<!--    <fieldtype name="text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.ISOLatin1AccentFilterFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.EnglishPorterFilterFactory" protected="protwords.txt"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.ISOLatin1AccentFilterFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.EnglishPorterFilterFactory" protected="protwords.txt"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldtype>-->

    <fieldtype name="text" class="solr.TextField" positionIncrementGap="100" >
      <analyzer>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <!-- remove dots from acronyms -->
        <filter class="solr.StandardFilterFactory"/>
        <!-- find letters with diacritics when looking for e/a/ou -->
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <!-- no more l' d' qu' etc. based on elision words file -->
        <filter class="solr.ElisionFilterFactory" articles="elisionwords.txt"/>
        <!-- no more le la les du  etc. based on stopwords file -->
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords_fr.txt"/>
        <!-- data will be pushed in lower case (during indexing and search) -->
        <filter class="solr.LowerCaseFilterFactory"/>
        <!-- texts will be found with their synonyms if written in synonyms file -->
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms_fr.txt" ignoreCase="true" expand="true"/>
        <!-- Phonetic / Metaphone search
        <filter class="solr.PhoneticFilterFactory" encoder="DoubleMetaphone"/> -->
        <!-- Stemming search -->
        <filter class="solr.SnowballPorterFilterFactory" language="French" />
        <!-- Remove duplicate tokens if same text and position value -->
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldtype>

    <fieldtype name="simple_text" class="solr.TextField" positionIncrementGap="100" >
      <analyzer>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <!-- remove dots from acronyms -->
        <filter class="solr.StandardFilterFactory"/>
        <!-- find letters with diacritics when looking for e/a/ou -->
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <!-- data will be pushed in lower case (during indexing and search) -->
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldtype>

  </types>
 <fields>

   <!-- Core Fields  -->
   <field name="id"         type="string" indexed="true" stored="true"/>
   <field name="recordtype" type="string" indexed="true" stored="true"/>
   <field name="recordid"   type="string" indexed="true" stored="true"/>

   <field name="allfields" type="text" indexed="true" stored="false" multiValued="true" />

   <!-- Dynamic MARC field indexing -->
   <dynamicField name="str_*"      type="string"        indexed="true" stored="true" multiValued="true"/>
   <dynamicField name="txt_*"      type="text"          indexed="true" stored="true" multiValued="true"/>
   <dynamicField name="int_*"      type="integer"       indexed="true" stored="true" multiValued="true"/>
   <dynamicField name="date_*"     type="date"          indexed="true" stored="true" multiValued="true"/>
   <dynamicField name="ste_*"      type="simple_text"   indexed="true" stored="true" multiValued="true"/>

   <dynamicField name="srt_str_*"  type="string"        indexed="true" stored="true" multiValued="false"/>
   <dynamicField name="srt_txt_*"  type="string"        indexed="true" stored="true" multiValued="false"/>
   <dynamicField name="srt_int_*"  type="integer"       indexed="true" stored="true" multiValued="false"/>
   <dynamicField name="srt_date_*" type="date"          indexed="true" stored="true" multiValued="false"/>
   <dynamicField name="srt_ste_*"  type="simple_text"   indexed="true" stored="true" multiValued="false"/>

 </fields>

 <uniqueKey>id</uniqueKey>
 <defaultSearchField>allfields</defaultSearchField>
 <copyField source="*" dest="allfields"/>

 <!-- Default Boolean Operator -->
 <solrQueryParser defaultOperator="AND"/>

 <!--similarity class="org.apache.lucene.search.DefaultSimilarity"/-->

</schema>
